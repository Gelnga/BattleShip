// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(BattleShipDbContext))]
    [Migration("20211228221212_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.BsBrainConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BoardLength")
                        .HasColumnType("int");

                    b.Property<int>("BoardWidth")
                        .HasColumnType("int");

                    b.Property<string>("EShipTouchRule")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("BsBrainConfigurations");
                });

            modelBuilder.Entity("Domain.SavedBsBrain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AgainstAi")
                        .HasColumnType("bit");

                    b.Property<int>("BsBrainConfigurationId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentPlayerId")
                        .HasColumnType("int");

                    b.Property<string>("GameBoards")
                        .IsRequired()
                        .HasMaxLength(100000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SavedBrainName")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("BsBrainConfigurationId");

                    b.ToTable("SavedBsBrains");
                });

            modelBuilder.Entity("Domain.ShipConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ShipQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ShipSizeX")
                        .HasColumnType("int");

                    b.Property<int>("ShipSizeY")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShipConfigurations");
                });

            modelBuilder.Entity("Domain.ShipInBSBrainConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BsBrainConfigurationId")
                        .HasColumnType("int");

                    b.Property<int>("ShipConfigurationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BsBrainConfigurationId");

                    b.HasIndex("ShipConfigurationId");

                    b.ToTable("ShipInBsBrainConfigurations");
                });

            modelBuilder.Entity("Domain.SavedBsBrain", b =>
                {
                    b.HasOne("Domain.BsBrainConfiguration", "BsBrainConfiguration")
                        .WithMany("SavedBsBrains")
                        .HasForeignKey("BsBrainConfigurationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BsBrainConfiguration");
                });

            modelBuilder.Entity("Domain.ShipInBSBrainConfiguration", b =>
                {
                    b.HasOne("Domain.BsBrainConfiguration", "BsBrainConfiguration")
                        .WithMany("ShipInBsBrainConfigurations")
                        .HasForeignKey("BsBrainConfigurationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.ShipConfiguration", "ShipConfiguration")
                        .WithMany()
                        .HasForeignKey("ShipConfigurationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BsBrainConfiguration");

                    b.Navigation("ShipConfiguration");
                });

            modelBuilder.Entity("Domain.BsBrainConfiguration", b =>
                {
                    b.Navigation("SavedBsBrains");

                    b.Navigation("ShipInBsBrainConfigurations");
                });
#pragma warning restore 612, 618
        }
    }
}
