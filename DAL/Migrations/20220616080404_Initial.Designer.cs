// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(BattleShipDbContext))]
    [Migration("20220616080404_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.BsBrainConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BoardLength")
                        .HasColumnType("integer");

                    b.Property<int>("BoardWidth")
                        .HasColumnType("integer");

                    b.Property<string>("EShipTouchRule")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("BsBrainConfigurations");
                });

            modelBuilder.Entity("Domain.SavedBsBrain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AgainstAi")
                        .HasColumnType("boolean");

                    b.Property<int>("BsBrainConfigurationId")
                        .HasColumnType("integer");

                    b.Property<int>("CurrentPlayerId")
                        .HasColumnType("integer");

                    b.Property<string>("GameBoards")
                        .IsRequired()
                        .HasMaxLength(100000)
                        .HasColumnType("character varying(100000)");

                    b.Property<string>("SavedBrainName")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("Id");

                    b.HasIndex("BsBrainConfigurationId");

                    b.ToTable("SavedBsBrains");
                });

            modelBuilder.Entity("Domain.ShipConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("ShipQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("ShipSizeX")
                        .HasColumnType("integer");

                    b.Property<int>("ShipSizeY")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ShipConfigurations");
                });

            modelBuilder.Entity("Domain.ShipInBSBrainConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BsBrainConfigurationId")
                        .HasColumnType("integer");

                    b.Property<int>("ShipConfigurationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BsBrainConfigurationId");

                    b.HasIndex("ShipConfigurationId");

                    b.ToTable("ShipInBSBrainConfigurations");
                });

            modelBuilder.Entity("Domain.ShipPlacementState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentShipQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("PreviouslyPlacedShips")
                        .IsRequired()
                        .HasMaxLength(20000)
                        .HasColumnType("character varying(20000)");

                    b.Property<int>("Rotation")
                        .HasColumnType("integer");

                    b.Property<int>("SavedBsBrainId")
                        .HasColumnType("integer");

                    b.Property<int>("ShipConfigIndex")
                        .HasColumnType("integer");

                    b.Property<string>("ShipPlacementPreviewCoordinate")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.HasIndex("SavedBsBrainId");

                    b.ToTable("ShipPlacementStates");
                });

            modelBuilder.Entity("Domain.SavedBsBrain", b =>
                {
                    b.HasOne("Domain.BsBrainConfiguration", "BsBrainConfiguration")
                        .WithMany("SavedBsBrains")
                        .HasForeignKey("BsBrainConfigurationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BsBrainConfiguration");
                });

            modelBuilder.Entity("Domain.ShipInBSBrainConfiguration", b =>
                {
                    b.HasOne("Domain.BsBrainConfiguration", "BsBrainConfiguration")
                        .WithMany("ShipInBsBrainConfigurations")
                        .HasForeignKey("BsBrainConfigurationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.ShipConfiguration", "ShipConfiguration")
                        .WithMany()
                        .HasForeignKey("ShipConfigurationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BsBrainConfiguration");

                    b.Navigation("ShipConfiguration");
                });

            modelBuilder.Entity("Domain.ShipPlacementState", b =>
                {
                    b.HasOne("Domain.SavedBsBrain", "SavedBsBrain")
                        .WithMany("ShipPlacementStates")
                        .HasForeignKey("SavedBsBrainId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SavedBsBrain");
                });

            modelBuilder.Entity("Domain.BsBrainConfiguration", b =>
                {
                    b.Navigation("SavedBsBrains");

                    b.Navigation("ShipInBsBrainConfigurations");
                });

            modelBuilder.Entity("Domain.SavedBsBrain", b =>
                {
                    b.Navigation("ShipPlacementStates");
                });
#pragma warning restore 612, 618
        }
    }
}
